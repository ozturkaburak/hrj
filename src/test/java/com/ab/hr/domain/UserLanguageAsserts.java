package com.ab.hr.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class UserLanguageAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserLanguageAllPropertiesEquals(UserLanguage expected, UserLanguage actual) {
        assertUserLanguageAutoGeneratedPropertiesEquals(expected, actual);
        assertUserLanguageAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserLanguageAllUpdatablePropertiesEquals(UserLanguage expected, UserLanguage actual) {
        assertUserLanguageUpdatableFieldsEquals(expected, actual);
        assertUserLanguageUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserLanguageAutoGeneratedPropertiesEquals(UserLanguage expected, UserLanguage actual) {
        assertThat(expected)
            .as("Verify UserLanguage auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserLanguageUpdatableFieldsEquals(UserLanguage expected, UserLanguage actual) {
        assertThat(expected)
            .as("Verify UserLanguage relevant properties")
            .satisfies(e -> assertThat(e.getLevel()).as("check level").isEqualTo(actual.getLevel()))
            .satisfies(e -> assertThat(e.getCreatedAt()).as("check createdAt").isEqualTo(actual.getCreatedAt()))
            .satisfies(e -> assertThat(e.getUpdatedAt()).as("check updatedAt").isEqualTo(actual.getUpdatedAt()))
            .satisfies(e -> assertThat(e.getDeletedAt()).as("check deletedAt").isEqualTo(actual.getDeletedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserLanguageUpdatableRelationshipsEquals(UserLanguage expected, UserLanguage actual) {
        assertThat(expected)
            .as("Verify UserLanguage relationships")
            .satisfies(e -> assertThat(e.getLanguage()).as("check language").isEqualTo(actual.getLanguage()));
    }
}
