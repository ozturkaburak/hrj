package com.ab.hr.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class UserAssignmentAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserAssignmentAllPropertiesEquals(UserAssignment expected, UserAssignment actual) {
        assertUserAssignmentAutoGeneratedPropertiesEquals(expected, actual);
        assertUserAssignmentAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserAssignmentAllUpdatablePropertiesEquals(UserAssignment expected, UserAssignment actual) {
        assertUserAssignmentUpdatableFieldsEquals(expected, actual);
        assertUserAssignmentUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserAssignmentAutoGeneratedPropertiesEquals(UserAssignment expected, UserAssignment actual) {
        assertThat(expected)
            .as("Verify UserAssignment auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserAssignmentUpdatableFieldsEquals(UserAssignment expected, UserAssignment actual) {
        assertThat(expected)
            .as("Verify UserAssignment relevant properties")
            .satisfies(e -> assertThat(e.getAssignedAt()).as("check assignedAt").isEqualTo(actual.getAssignedAt()))
            .satisfies(e -> assertThat(e.getJoinedAt()).as("check joinedAt").isEqualTo(actual.getJoinedAt()))
            .satisfies(e -> assertThat(e.getFinishedAt()).as("check finishedAt").isEqualTo(actual.getFinishedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserAssignmentUpdatableRelationshipsEquals(UserAssignment expected, UserAssignment actual) {
        assertThat(expected)
            .as("Verify UserAssignment relationships")
            .satisfies(e -> assertThat(e.getAssignment()).as("check assignment").isEqualTo(actual.getAssignment()));
    }
}
