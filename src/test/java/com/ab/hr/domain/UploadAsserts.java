package com.ab.hr.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class UploadAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUploadAllPropertiesEquals(Upload expected, Upload actual) {
        assertUploadAutoGeneratedPropertiesEquals(expected, actual);
        assertUploadAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUploadAllUpdatablePropertiesEquals(Upload expected, Upload actual) {
        assertUploadUpdatableFieldsEquals(expected, actual);
        assertUploadUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUploadAutoGeneratedPropertiesEquals(Upload expected, Upload actual) {
        assertThat(expected)
            .as("Verify Upload auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUploadUpdatableFieldsEquals(Upload expected, Upload actual) {
        assertThat(expected)
            .as("Verify Upload relevant properties")
            .satisfies(e -> assertThat(e.getUrl()).as("check url").isEqualTo(actual.getUrl()))
            .satisfies(e -> assertThat(e.getType()).as("check type").isEqualTo(actual.getType()))
            .satisfies(e -> assertThat(e.getExtension()).as("check extension").isEqualTo(actual.getExtension()))
            .satisfies(e -> assertThat(e.getUploadDate()).as("check uploadDate").isEqualTo(actual.getUploadDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUploadUpdatableRelationshipsEquals(Upload expected, Upload actual) {
        assertThat(expected)
            .as("Verify Upload relationships")
            .satisfies(e -> assertThat(e.getUserProfile()).as("check userProfile").isEqualTo(actual.getUserProfile()));
    }
}
