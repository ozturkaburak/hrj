package com.ab.hr.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class JobPostingAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertJobPostingAllPropertiesEquals(JobPosting expected, JobPosting actual) {
        assertJobPostingAutoGeneratedPropertiesEquals(expected, actual);
        assertJobPostingAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertJobPostingAllUpdatablePropertiesEquals(JobPosting expected, JobPosting actual) {
        assertJobPostingUpdatableFieldsEquals(expected, actual);
        assertJobPostingUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertJobPostingAutoGeneratedPropertiesEquals(JobPosting expected, JobPosting actual) {
        assertThat(expected)
            .as("Verify JobPosting auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertJobPostingUpdatableFieldsEquals(JobPosting expected, JobPosting actual) {
        assertThat(expected)
            .as("Verify JobPosting relevant properties")
            .satisfies(e -> assertThat(e.getTitle()).as("check title").isEqualTo(actual.getTitle()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getLocation()).as("check location").isEqualTo(actual.getLocation()))
            .satisfies(e -> assertThat(e.getDepartment()).as("check department").isEqualTo(actual.getDepartment()))
            .satisfies(e -> assertThat(e.getStatus()).as("check status").isEqualTo(actual.getStatus()))
            .satisfies(e -> assertThat(e.getCreatedDate()).as("check createdDate").isEqualTo(actual.getCreatedDate()))
            .satisfies(e -> assertThat(e.getExpireDate()).as("check expireDate").isEqualTo(actual.getExpireDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertJobPostingUpdatableRelationshipsEquals(JobPosting expected, JobPosting actual) {}
}
