package com.ab.hr.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class LanguageAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLanguageAllPropertiesEquals(Language expected, Language actual) {
        assertLanguageAutoGeneratedPropertiesEquals(expected, actual);
        assertLanguageAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLanguageAllUpdatablePropertiesEquals(Language expected, Language actual) {
        assertLanguageUpdatableFieldsEquals(expected, actual);
        assertLanguageUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLanguageAutoGeneratedPropertiesEquals(Language expected, Language actual) {
        assertThat(expected)
            .as("Verify Language auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLanguageUpdatableFieldsEquals(Language expected, Language actual) {
        assertThat(expected)
            .as("Verify Language relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getCreatedAt()).as("check createdAt").isEqualTo(actual.getCreatedAt()))
            .satisfies(e -> assertThat(e.getUpdatedAt()).as("check updatedAt").isEqualTo(actual.getUpdatedAt()))
            .satisfies(e -> assertThat(e.getDeletedAt()).as("check deletedAt").isEqualTo(actual.getDeletedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLanguageUpdatableRelationshipsEquals(Language expected, Language actual) {}
}
